# Base image with ARM64 support and CUDA 12.9
#FROM nvcr.io/nvidia/cuda:12.9.0-cudnn-devel-ubuntu24.04
#FROM nvidia/cuda:12.9.0-runtime-ubuntu24.04
FROM nvcr.io/nvidia/cuda:12.9.0-cudnn-runtime-ubuntu24.04

# Set non-interactive frontend for apt
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git cmake ninja-build build-essential \
    libopenblas-dev libomp-dev libprotobuf-dev protobuf-compiler \
    m4 libgoogle-glog-dev libgflags-dev \
    python3-dev python3-pip python3-setuptools python3-six \
    curl ca-certificates libnuma-dev numactl \
 && rm -rf /var/lib/apt/lists/*

# Upgrade pip and install Python packages
RUN python3 -m pip install --break-system-packages \
      typing_extensions pyyaml setuptools cmake numpy ninja

# Set environment variables for CUDA build
ENV PATH=/usr/local/cuda/bin:$PATH \
    CUDA_HOME=/usr/local/cuda \
    CUDACXX=/usr/local/cuda/bin/nvcc \
    USE_CUDA=1 \
    TORCH_CUDA_ARCH_LIST="8.6" \
    BUILD_TEST=0
    #MAX_JOBS=32

# Clone PyTorch
WORKDIR /opt
RUN git clone --recursive https://github.com/pytorch/pytorch.git
WORKDIR /opt/pytorch
RUN git checkout v2.7.1 && \
    git submodule sync && \
    git submodule update --init --recursive

# Build PyTorch and install wheel
RUN mkdir -p /opt/wheels
RUN python3 setup.py bdist_wheel

# Optional: Don't install inside container unless needed
#RUN python3 -m pip install --break-system-packages dist/*.whl

COPY copy.sh /copy.sh
RUN chmod +x /copy.sh

VOLUME ["/target"]
CMD ["/copy.sh"]
