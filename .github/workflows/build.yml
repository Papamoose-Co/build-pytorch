name: Build all Docker images

on:
  workflow_dispatch:
  push:
    branches-ignore: [test*, "main", "dev"]
    tags:
      - 'v*.*.*'
  release:
    types: [created]
  schedule:
    # Weekly build every Wednesday at 3 AM UTC
    - cron: '0 3 * * 3'

env:
  REGISTRY: ghcr.io
  IMAGE_REPO_OWNER: papamoose

permissions:
  packages: write

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          # Define all OS variants here in one place
          - variant: ubuntu2404
            dockerfile: ubuntu24.04_cuda12.9.0_cudnn
            image_name: pytorch-ubuntu2404-cuda12.9.0-cudnn
            labels:
              title: pytorch-ubuntu2404-cuda12.9.0-cudnn
              description: Ubuntu 24.04 container for running PyTorch

    steps:
      - name: Get some storage space back
        run: |
          rm -rf /opt/hostedtoolcache

      - name: Checkout code
        uses: actions/checkout@v3

      # Setup QEMU and Buildx once per job (not per matrix variant)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Login only happens once for all variants in the job
      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Use metadata action to generate tags dynamically
      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_REPO_OWNER }}/${{ matrix.image_name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,${{ github.event.release.tag_name }}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      - name: Build and push image
        id: build-push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: $|
            maintainer=papamoose
            org.opencontainers.image.title=${{ matrix.labels.title }}
            org.opencontainers.image.description=${{ matrix.labels.description }}
            org.opencontainers.image.vendor=Papamoose Co

     # Only push on non-pull-requests (applies to all variants)
      - name: Determine if should push
        run: echo ::set-output name=should_push::${{ !contains(github.event_name, 'pull_request') }}
        id: set-push

      # Conditional push using the above output
      - name: Actual Build and Push (conditional)
        uses: docker/build-push-action@v4
        if: ${{ steps.set-push.outputs.should_push == 'true' }}
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
