name: Build PyTorch Wheels

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    env:
      IMAGE_NAME: pytorch-wheel-builder

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for ${{ matrix.arch }}
        run: |
          docker buildx build \
            --platform linux/${{ matrix.arch }} \
            --load \
            -t $IMAGE_NAME:${{ matrix.arch }} \
            -f Dockerfile .

      - name: Run container to build wheel
        run: |
          CID=$(docker create $IMAGE_NAME:${{ matrix.arch }})
          docker start -a $CID
          docker cp $CID:/opt/pytorch/dist ./dist-${{ matrix.arch }}
          docker rm $CID

      - name: Upload wheel artifact (${{ matrix.arch }})
        uses: actions/upload-artifact@v4
        with:
          name: pytorch-wheel-${{ matrix.arch }}
          path: ./dist-${{ matrix.arch }}/*.whl

  release-wheel:
    name: Publish Wheels to GitHub Release
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')
    needs: build-wheel
    runs-on: ubuntu-latest

    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/**/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
